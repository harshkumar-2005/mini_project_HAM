"""Create students table

Revision ID: 02cff1def3bb
Revises: 
Create Date: 2025-02-09 19:26:19.458803

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision = '02cff1def3bb'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.drop_index('email')

    op.drop_table('users')
    op.drop_table('enrollment')
    with op.batch_alter_table('course', schema=None) as batch_op:
        batch_op.drop_index('course_code')

    op.drop_table('course')
    with op.batch_alter_table('courses', schema=None) as batch_op:
        batch_op.alter_column('name',
               existing_type=mysql.VARCHAR(length=255),
               type_=sa.String(length=100),
               existing_nullable=False)
        batch_op.alter_column('description',
               existing_type=mysql.TEXT(),
               nullable=True)

    with op.batch_alter_table('enrollments', schema=None) as batch_op:
        batch_op.drop_constraint('enrollments_ibfk_2', type_='foreignkey')
        batch_op.drop_constraint('enrollments_ibfk_1', type_='foreignkey')
        batch_op.create_foreign_key(None, 'courses', ['course_id'], ['id'])
        batch_op.create_foreign_key(None, 'students', ['student_id'], ['id'])

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('enrollments', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('enrollments_ibfk_1', 'users', ['student_id'], ['id'], ondelete='CASCADE')
        batch_op.create_foreign_key('enrollments_ibfk_2', 'courses', ['course_id'], ['id'], ondelete='CASCADE')

    with op.batch_alter_table('courses', schema=None) as batch_op:
        batch_op.alter_column('description',
               existing_type=mysql.TEXT(),
               nullable=False)
        batch_op.alter_column('name',
               existing_type=sa.String(length=100),
               type_=mysql.VARCHAR(length=255),
               existing_nullable=False)

    op.create_table('course',
    sa.Column('id', mysql.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('course_name', mysql.VARCHAR(length=200), nullable=False),
    sa.Column('course_code', mysql.VARCHAR(length=50), nullable=False),
    sa.Column('description', mysql.TEXT(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    mysql_collate='utf8mb4_0900_ai_ci',
    mysql_default_charset='utf8mb4',
    mysql_engine='InnoDB'
    )
    with op.batch_alter_table('course', schema=None) as batch_op:
        batch_op.create_index('course_code', ['course_code'], unique=True)

    op.create_table('enrollment',
    sa.Column('id', mysql.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', mysql.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('course_id', mysql.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('timestamp', mysql.DATETIME(), nullable=True),
    sa.ForeignKeyConstraint(['course_id'], ['course.id'], name='enrollment_ibfk_2'),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name='enrollment_ibfk_1'),
    sa.PrimaryKeyConstraint('id'),
    mysql_collate='utf8mb4_0900_ai_ci',
    mysql_default_charset='utf8mb4',
    mysql_engine='InnoDB'
    )
    op.create_table('users',
    sa.Column('id', mysql.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('name', mysql.VARCHAR(length=255), nullable=False),
    sa.Column('email', mysql.VARCHAR(length=255), nullable=False),
    sa.Column('role', mysql.ENUM('student', 'admin'), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    mysql_collate='utf8mb4_0900_ai_ci',
    mysql_default_charset='utf8mb4',
    mysql_engine='InnoDB'
    )
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.create_index('email', ['email'], unique=True)

    # ### end Alembic commands ###
